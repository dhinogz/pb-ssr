package shared

import "github.com/Depado/pb-templ-htmx-tailwind/components/icons"

templ ThemeToggle() {
	<label class="swap swap-rotate btn btn-ghost">
		<input type="checkbox" class="theme-controller " value="light"/>
		@icons.Sun("swap-on fill-current")
		@icons.Moon("swap-off fill-current")
	</label>
}

templ Drawer(c Context) {
	<div class="drawer-side">
		<label for="drawer" aria-label="close sidebar" class="drawer-overlay"></label>
		<div class="min-h-full p-1 w-72 bg-base-200">
			<ul class="menu">
				if c.User != nil {
					<li>
						<a
							hx-get="/settings"
							hx-trigger="click"
							hx-target="body"
							hx-replace-url="true"
							hx-push-url="true"
						>
							@icons.Cog()
							Settings
						</a>
					</li>
					<li>
						<a
							hx-post="/logout"
							hx-trigger="click"
						>
							@icons.Logout()
							Logout
						</a>
					</li>
				} else {
					<li>
						<a
							hx-get="/login"
							hx-trigger="click"
							hx-target="body"
							hx-replace-url="true"
							hx-push-url="true"
						>
							@icons.User(false)
							Login
						</a>
					</li>
				}
			</ul>
		</div>
	</div>
}

templ UserMenu(c Context) {
	<li class="dropdown dropdown-end mx-1">
		<div tabindex="0" role="button" class="no-animation btn btn-ghost">
			if c.User.Username() == "" {
				{ c.User.Email() }
			} else {
				{ c.User.Username() }
			}
			@icons.ChevronDown()
		</div>
		<ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-200 rounded-box">
			<li>
				<a class="flex" title="View profile">
					@icons.User(true)
					<div class="flex flex-col">
						<h3 class="font-bold">{ c.User.Username() }</h3>
						<span class="text-xs">{ c.User.Email() }</span>
					</div>
				</a>
			</li>
			<div class="divider my-0"></div>
			<li>
				<a
					hx-get="/settings"
					hx-trigger="click"
					hx-target="body"
					hx-replace-url="true"
					hx-push-url="true"
				>
					@icons.Cog()
					Settings
				</a>
			</li>
			<div class="divider my-0"></div>
			<li>
				<a
					hx-post="/logout"
					hx-trigger="click"
				>
					@icons.Logout()
					Logout
				</a>
			</li>
		</ul>
	</li>
}

templ DrawerWrapper(c Context) {
	<div class="drawer">
		<input id="drawer" type="checkbox" class="drawer-toggle"/>
		<div class="drawer-content min-h-screen flex flex-col">
			<!-- Navbar -->
			<div class="w-full navbar bg-base-100">
				<div class="flex-none lg:hidden">
					<label for="drawer" aria-label="open sidebar" class="btn btn-square btn-ghost">
						@icons.Drawer()
					</label>
				</div>
				<div class="flex-1 mx-1">
					<a
						class="no-animation btn btn-ghost"
						hx-get="/"
						hx-trigger="click"
						hx-target="body"
						hx-replace-url="true"
						hx-push-url="true"
					>
						@icons.App()
					</a>
				</div>
				<div class="flex-none hidden lg:block">
					<ul class="menu menu-horizontal">
						if c.User != nil {
							@UserMenu(c)
						} else {
							<li>
								<a
									class="no-animation btn btn-ghost"
									hx-get="/login"
									hx-trigger="click"
									hx-target="body"
									hx-replace-url="true"
									hx-push-url="true"
								>
									Login
								</a>
							</li>
						}
						<li>
							@ThemeToggle()
						</li>
					</ul>
				</div>
			</div>
			{ children... }
			@ToastPlaceHolder()
			@Footer()
		</div>
		@Drawer(c)
	</div>
}
